name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add uv to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Create virtual environment
        run: uv venv

      - name: Activate virtual environment
        run: source .venv/bin/activate

      - name: Install dependencies
        run: uv pip install -e .

      - name: Install pytest
        run: uv pip install pytest

      - name: Run pytest
        run: uv run pytest tests/

  tag_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # - name: Install toml
      #   run: pip install toml

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=$(jq -r '.project.version' pyproject.toml) # Use jq
          # Alternative using python:
          # python -c "import toml; data = toml.load('pyproject.toml'); print(data['project']['version'])" > version.txt
          # VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Tag
        uses: actions/github-script@v7
        with:
          script: |
            const version = "${{ steps.extract_version.outputs.VERSION }}";
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${version}`,
              sha: context.sha
            });

      - name: Push Tag
        run: git push origin refs/tags/v${{ steps.extract_version.outputs.VERSION }}